# We are using a couple of shims to integrate zinit, fzf and use non-constant sources for that
# shellcheck disable=SC1090

# This file is interpreted by zsh, so we can use zsh specific syntax here.
# shellcheck disable=SC2051,SC2296

# is_installed checks if a given binary can be found in the PATH and is executable.
# It accepts one argument, the name of the binary to check and returns 0 if the binary
# is found, 1 otherwise.
function is_installed() {
    command -v "$1" &> /dev/null
}

# Prepare direnv hook before enabling Powerlevel 10k instant prompt.
# There is a second line related to direnv below.
# See https://github.com/romkatv/powerlevel10k#how-do-i-initialize-direnv-when-using-instant-prompt
if is_installed "direnv"; then
    (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Enable the direnv hook. 
# This is the second command related to direnv
# See https://github.com/romkatv/powerlevel10k#how-do-i-initialize-direnv-when-using-instant-prompt
if is_installed "direnv"; then
    (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"
fi

# Set the directory where we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
    mkdir -p "$(dirname "$ZINIT_HOME")"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Load Zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add zsh plugins
zinit light zsh-users/zsh-syntax-highlighting # syntax highlighting in shell
zinit light zsh-users/zsh-completions         # many completions for various commands
zinit light zsh-users/zsh-autosuggestions     # suggest commands based on history
zinit light Aloxaf/fzf-tab                    # use fzf in auto completions

# Add in snippets
zinit snippet OMZP::aws               # completions for awscli v2
zinit snippet OMZP::kubectl           # completions and aliases for kubectl
zinit snippet OMZP::command-not-found

# Load my own completions
export MY_ZSH_COMPLETIONS="$XDG_DATA_HOME/zsh-completions"
if [ ! -d "$MY_ZSH_COMPLETIONS" ]; then
    mkdir -p "$MY_ZSH_COMPLETIONS"
fi
fpath+=( "$MY_ZSH_COMPLETIONS" )

# Load completions
autoload -U compinit && compinit
zinit cdreplay -q

# Keybindings
bindkey -e # Emacs mode (e.g. jump with Ctrl+a or Ctrl+e)
bindkey '^[[1;5C' forward-word  # jump with Ctrl + →
bindkey '^[[1;5D' backward-word # jump with Ctrl + ←
bindkey "^[[3~" delete-char # Make delete key work

# Shell history configuration
export HISTSIZE=5000 # max number of entries in local history file
export HISTFILE=~/.zsh_history
export SAVEHIST=$HISTSIZE
export HISTDUP=erase # remove any duplicates
setopt append_history # append history entries to file instead of overwriting
setopt share_history # enable sharing history between multiple sessions / windows
setopt hist_ignore_space # to not add commands to history if they start with a space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt inc_append_history # save each command immediately in the history file

# Completion styling
setopt menu_complete  # complete till first ambiguous character
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' # make auto completion case-insensitive
zstyle ':completion:*' menu select # # cycle with <TAB> through options
zstyle ':completion:*' menu no

# The $realpath variable in the argument to fzf-preview should not be expanded
# shellcheck disable=SC2016
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# Warn if regex does not match anything
setopt nomatch

# automatically remove duplicates from the following array(s)
typeset -U fpath

# Treat parts of an path as different words.
# Influences the behaviour of e.g. CTRL-W
autoload -U select-word-style
select-word-style bash

# Enable commenting lines on the shell
setopt interactivecomments

# no beep...
unsetopt beep notify

# Aliases
alias grep='grep --color'
alias please='sudo'
alias gpu='git pu'
alias ts='tig status'
alias coma='git commit --amend'
alias ll='ls -l --color -h'
alias la='ll -a'
alias kc=kubectl
alias ka=kafkactl


# https://github.com/sharkdp/bat
if is_installed "bat"; then
    alias cat='bat --style=plain'
fi

if is_installed "cwtch"; then
    alias watch=cwtch
fi

if is_installed "tldr"; then
    alias help=tldr
fi

if is_installed "brew"; then
    eval "$(brew shellenv)"
fi

# https://github.com/bugaevc/wl-clipboard
if is_installed "wl-copy"; then
    alias clipboard=wl-copy
fi

if is_installed "gron"; then
    alias ungron='gron --ungron'
fi

if is_installed "prettyping"; then
    alias ping='prettyping --nolegend'
fi

if [ -e "$HOME/.asdf/asdf.sh" ]; then
    source "$HOME/.asdf/asdf.sh"
    fpath+=( "${ASDF_DIR}/completions" )
fi

# Set up fzf key bindings and fuzzy completion
if is_installed "fzf"; then
    source <(fzf --zsh)
fi

# https://github.com/ajeetdsouza/zoxide
if is_installed "zoxide"; then
    eval "$(zoxide init zsh --cmd cd)"
fi

# Add Go to PATH if it is installed.
if [[ -d "/usr/local/go" ]]; then
    export PATH=/usr/local/go/bin:$PATH
fi

# Add pyenv to PATH if it is installed.
# See https://github.com/pyenv/pyenv
if [[ -d "$HOME/.pyenv" ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init - zsh)"
fi

# A helper function used in the cd function below.
function __my_cd() {
    # shellcheck disable=SC2164
    if is_installed "zoxide"; then
        __zoxide_z "$@"
    else
        builtin cd "$@"
    fi
}

# A function to allow traversing up the file system using multiple dots (e.g. ....)
function cd() {
    if [[ "$1" =~ ^\\.{1,}$ ]]; then
        __my_cd "$(printf '../%.0s' {1..$(( ${#1} - 1 ))})"
    else
        __my_cd "$@"
    fi
}

# Load Powerlevel10k theme
# https://github.com/romkatv/powerlevel10k
zinit ice depth"1" # git clone depth
zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

